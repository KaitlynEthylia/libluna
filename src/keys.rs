enum Key {
	KeyA = split(0x41, 30),
	KeyB = split(0x42, 48),
	KeyC = split(0x43, 46),
	KeyD = split(0x44, 32),
	KeyE = split(0x45, 18),
	KeyF = split(0x46, 33),
	KeyG = split(0x47, 34),
	KeyH = split(0x48, 35),
	KeyI = split(0x49, 23),
	KeyJ = split(0x4A, 36),
	KeyK = split(0x4B, 37),
	KeyL = split(0x4C, 38),
	KeyM = split(0x4D, 50),
	KeyN = split(0x4E, 49),
	KeyO = split(0x4F, 24),
	KeyP = split(0x50, 25),
	KeyQ = split(0x51, 16),
	KeyR = split(0x52, 19),
	KeyS = split(0x53, 31),
	KeyT = split(0x54, 20),
	KeyU = split(0x55, 22),
	KeyV = split(0x56, 47),
	KeyW = split(0x57, 17),
	KeyX = split(0x58, 45),
	KeyY = split(0x59, 21),
	KeyZ = split(0x5A, 44),
	Key1 = split(0x31, 02),
	Key2 = split(0x32, 03),
	Key3 = split(0x33, 04),
	Key4 = split(0x34, 05),
	Key5 = split(0x35, 06),
	Key6 = split(0x36, 07),
	Key7 = split(0x37, 08),
	Key8 = split(0x38, 09),
	Key9 = split(0x39, 10),
	Key0 = split(0x30, 11),
	KeyEsc = split(0x1B, 01),
	KeyBack = split(0x08, 14),
	KeyTab = split(0x09, 15),
	KeyReturn = split(0x0D, 28),
	KeyCapsLock = split(0x14, 58),
	KeyLShift = split(0xA0, 42),
	KeyRShift = split(0xA1, 54),
	KeyLCtrl = split(0xA2, 29),
	KeyRCtrl = split(0xA3, 97),
	KeyLAlt = split(0xA4, 56),
	KeyRAlt = split(0xA5, 100),
	KeyLWinMeta = split(0x5B, 125),
	KeyRWinMeta = split(0x5C, 126),
	KeyList = split(0x5D, 127),
	KeyF1 = split(0x70, 59),
	KeyF2 = split(0x71, 60),
	KeyF3 = split(0x72, 61),
	KeyF4 = split(0x73, 62),
	KeyF5 = split(0x74, 63),
	KeyF6 = split(0x75, 64),
	KeyF7 = split(0x76, 65),
	KeyF8 = split(0x77, 66),
	KeyF9 = split(0x78, 67),
	KeyF10 = split(0x79, 68),
	KeyF11 = split(0x7a, 87),
	KeyF12 = split(0x7b, 88),
	KeyF13 = split(0x7c, 183),
	KeyF14 = split(0x7d, 184),
	KeyF15 = split(0x7e, 185),
	KeyF16 = split(0x7f, 186),
	KeyF17 = split(0x80, 187),
	KeyF18 = split(0x81, 188),
	KeyF19 = split(0x82, 189),
	KeyF20 = split(0x83, 190),
	KeyF21 = split(0x84, 191),
	KeyF22 = split(0x85, 192),
	KeyF23 = split(0x86, 193),
	KeyF24 = split(0x87, 194),
	KeySpace = split(0x20, 57),
	KeyPause = split(0x13, 119),
	KeyPageUp = split(0x22, 104),
	KeyPageDown = split(0x21, 109),
	KeyEnd = split(0x23, 107),
	KeyHome = split(0x24, 102),
	KeyInsert = split(0x2D, 110),
	KeyDelete = split(0x2E, 111),
	KeyLeft = split(0x25, 105),
	KeyRight = split(0x27, 106),
	KeyUp = split(0x26, 103),
	KeyDown = split(0x28, 108),
	KeyNumpad0 = split(0x60, 82),
	KeyNumpad1 = split(0x61, 79),
	KeyNumpad2 = split(0x62, 80),
	KeyNumpad3 = split(0x63, 81),
	KeyNumpad4 = split(0x64, 75),
	KeyNumpad5 = split(0x65, 76),
	KeyNumpad6 = split(0x66, 77),
	KeyNumpad7 = split(0x67, 71),
	KeyNumpad8 = split(0x68, 72),
	KeyNumpad9 = split(0x69, 73),
	KeyNumpadMultiply = split(0x6A, 55),
	KeyNumpadDivide = split(0x6B, 98),
	KeyNumpadAdd = split(0x6D, 78),
	KeyNumpadSubtract = split(0x6E, 74),
	KeyNumpadDecimal = split(0x6F, 83),
	KeyNumLock = split(0x90, 69),
	KeyScrollLock = split(0x91, 70),
	KeyBrowserBack = split(0xA6, 158),
	KeyBrowserForward = split(0xA7, 159),
	KeyBrowserRefresh = split(0xA8, 173),
	KeyBrowserStop = split(0xA9, 166),
	KeyBrowserSearch = split(0xAA, 217),
	KeyBrowserBookmarks = split(0xAB, 156),
	KeyBrowserHome = split(0xAC, 172),
	KeyVolMute = split(0xAD, 113),
	KeyVolDown = split(0xAE, 114),
	KeyVolUp = split(0xAF, 115),
	KeyMediaNext = split(0xB0, 163),
	KeyMediaPrev = split(0xB1, 165),
	KeyMediaStop = split(0xB2, 166),
	KeyMediaPlayPause = split(0xB3, 164),
	KeyAppMail = split(0xB4, 155),
	KeyAppMedia = split(0xB5, 226),
	KeyOEMSemiColon = split(0xBA, 47),
	KeyOEMEqual = split(0xBB, 13),
	KeyOEMComma = split(0xBC, 51),
	KeyOEMMinus = split(0xBD, 12),
	KeyOEMDot = split(0xBE, 52),
	KeyOEMSlash = split(0xBF, 53),
	KeyOEMGrave = split(0xC0, 41),
	KeyOEMLeftBrace = split(0xDB, 26),
	KeyOEMBackslash = split(0xDC, 43),
	KeyOEMRightBrace = split(0xDD, 27),
	KeyOEMApostrophe = split(0xDE, 40),
	Key102 = split(0xE2, 86),
	#[cfg(feature = "platform")] KeyPlatformSpecific(isize),
}

const fn split(lin: isize, win: isize) -> isize {
	if cfg!(target_os = "linux") { lin } else
	if cfg!(target_os = "windows") { win } else 
		{ panic!("OS not supported!") }
}

